services:
  # PostgreSQL Database
  db:
    image: postgres:14-alpine
    container_name: filltech_odoo_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: ${PGDATA}
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./backups:/backups
    restart: unless-stopped
    networks:
      - odoo_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for sessions and caching
  redis:
    image: redis:7-alpine
    container_name: filltech_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - odoo_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Odoo Application
  odoo:
    image: odoo:18.0
    container_name: filltech_odoo_app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - HOST=${DB_HOST}
      - USER=${DB_USER}
      - PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - odoo_data:/var/lib/odoo
      - ./config/odoo.conf:/etc/odoo/odoo.conf:ro
      - ./custom_addons:/mnt/extra-addons:ro
      - odoo_logs:/var/log/odoo
    restart: unless-stopped
    networks:
      - odoo_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8069/web/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: filltech_nginx
    depends_on:
      - odoo
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - odoo_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backup service (runs daily)
  backup:
    image: postgres:14-alpine
    container_name: filltech_backup
    depends_on:
      - db
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts:ro
    networks:
      - odoo_network
    command: |
      sh -c '
        echo "Backup service started"
        while true; do
          sleep 86400  # 24 hours
          echo "Starting daily backup..."
          pg_dump -h db -U ${POSTGRES_USER} -d ${POSTGRES_DB} > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
          find /backups -name "backup_*.sql" -mtime +${BACKUP_RETENTION_DAYS} -delete
          echo "Backup completed"
        done
      '
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  odoo_data:
    driver: local
  redis_data:
    driver: local
  odoo_logs:
    driver: local

networks:
  odoo_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
