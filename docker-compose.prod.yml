services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-odoo_prod}
      POSTGRES_USER: ${POSTGRES_USER:-odoo_prod}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-odoo_prod}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - odoo-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  odoo:
    build: 
      context: .
      target: production
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${ODOO_PORT:-8069}:8069"
    volumes:
      - odoo_data:/var/lib/odoo
      - odoo_logs:/var/log/odoo
      - ./addons:/opt/odoo/custom-addons:ro
      - ./config/odoo.prod.conf:/etc/odoo/odoo.conf:ro
    environment:
      - ODOO_DB_HOST=postgres
      - ODOO_DB_USER=${POSTGRES_USER:-odoo_prod}
      - ODOO_DB_PASSWORD=${POSTGRES_PASSWORD}
      - ODOO_DB_NAME=${POSTGRES_DB:-odoo_prod}
      - ODOO_ADMIN_PASSWORD=${ODOO_ADMIN_PASSWORD}
    networks:
      - odoo-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  nginx:
    image: nginx:alpine
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - odoo
    networks:
      - odoo-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  odoo_data:
    driver: local
  odoo_logs:
    driver: local

networks:
  odoo-network:
    driver: bridge
